0. 자바설치
sudo yum install java-1.8.0-openjdk-devel.x86_64
java -version

-시스템에서 사용할 자바 버전 변경
sudo alternatives --config java
sudo alternatives --config javac

1. E/S 다운로드
wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.1.3.tar.gz

2. 압축 풀기
tar zxvf elasticsearch-6.1.3.tar.gz

파일 개방갯수 조절
- sudo vi /etc/security/limits.conf
  아래 텍스트 추가
  root hard nofile 65536
  root soft nofile 65536
  root hard nproc 65536
  root soft nproc 65536
  ec2-user hard nofile 65536
  ec2-user soft nofile 65536
  ec2-user hard nproc 65536
  ec2-user soft nproc 65536
  ec2-user soft memlock unlimited
  ec2-user hard memlock unlimited
이후
재로그인


-vm.max_map_count 값 설정
$ sudo sysctl -w vm.max_map_count=262144

3. 설정 파일 수정
vi config/elasticsearch.yml
network.host: 0.0.0.0 추가

vi config/jvm.options
1g => 2g


4. 플러그인 설치

스펠체커를 위한 플러그인
bin/elasticsearch-plugin install analysis-icu

한글 형태소분석기 (은전한닢)
bash <(curl -s https://bitbucket.org/eunjeon/seunjeon/raw/master/elasticsearch/scripts/downloader.sh) -e 6.1.3 -p 6.1.1.0
./bin/elasticsearch-plugin install file://`pwd`/elasticsearch-analysis-seunjeon-6.1.1.0.zip

자동완성용 플러그인 (자체개발)
wget https://github.com/blaze94/fastcampus_ir_common/raw/master/lecture/lecture4/qj-analyzer-plugin-1.0.zip
bin/elasticsearch-plugin install file://`pwd`/qj-analyzer-plugin-1.0.zip

5. E/S실행
bin/elasticsearch

6. 템플릿 등록 (분석기 세팅,매핑)
PUT _template/store
{
    "template" : "store*",
    "settings" : {
     "index":{
       "analysis":{
         "analyzer":{
           "korean":{
             "type":"custom",
             "tokenizer":"seunjeon_default_tokenizer"
           },
          "nfd_normalized": {
            "tokenizer": "standard",
            "char_filter": [
              "nfd_normalizer"
            ]
          },
          "my-index-edge-jaso":{
            "type":"custom",
            "tokenizer":"keyword",
            "filter":["my-jaso-filter","edge_filter"]
          },
          "my-index-full-jaso":{
            "type":"custom",
            "tokenizer":"keyword",
            "filter":["edge_reverse_filter","my-jaso-filter","edge_filter"]
          },
         "my-search-jaso":{
            "type":"custom",
            "tokenizer":"keyword",
            "filter":["my-jaso-filter"]
          }
         },
         "tokenizer": {
           "seunjeon_default_tokenizer": {
             "type": "seunjeon_tokenizer",
             "index_eojeol": false,
             "user_words": ["낄끼+빠빠,-100", "c\\+\\+", "어그로", "버카충", "abc마트"]
           }
         },
        "char_filter": {
          "nfd_normalizer": {
            "type": "icu_normalizer",
            "name": "nfc",
            "mode": "decompose"
          }
        },
        "filter" : {
            "my-jaso-filter" : {
                "type" : "qj-analyzer-filter",
                "tokenizer": "keyword",
                "mode":"simple_jaso",
                "jaso_typo" : true
            },
            "edge_filter": {
              "type": "edge_ngram",
              "min_gram": 1,
              "max_gram": 10,
              "token_chars": [
                "letter",
                "digit"
              ]
            },
            "edge_reverse_filter": {
              "type": "edge_ngram",
              "min_gram": 1,
              "max_gram": 10,
              "side" : "back",
              "token_chars": [
                "letter",
                "digit"
              ]
            }
        }
       }
     }
   },
    "mappings": {
      "doc":
      {
      "properties": {
          "address": {
              "type": "text",
              "fields": {
                  "keyword": {
                      "type": "keyword",
                      "ignore_above": 256
                  }
              }
          },
          "category": {
              "type": "text",
              "fields": {
                  "keyword": {
                      "type": "keyword",
                      "ignore_above": 256
                  }
              }
          },
          "category1": {
              "type": "text",
              "fields": {
                  "keyword": {
                      "type": "keyword",
                      "ignore_above": 256
                  }
              }
          },
          "category2": {
              "type": "text",
              "fields": {
                  "keyword": {
                      "type": "keyword",
                      "ignore_above": 256
                  }
              }
          },
          "description": {
              "type": "text",
              "analyzer": "korean",
              "fields": {
                  "keyword": {
                      "type": "keyword",
                      "ignore_above": 256
                  }
              }
          },
          "region": {
              "type": "keyword"
          },
          "idx": {
              "type": "long"
          },
          "lat": {
              "type": "float"
          },
          "link": {
              "type": "keyword"
          },
          "lng": {
              "type": "float"
          },
          "location": {
              "type": "geo_point"
          },
          "rate": {
              "type": "long"
          },
          "roadaddress": {
              "type": "text",
              "analyzer": "korean",
              "fields": {
                  "keyword": {
                      "type": "keyword",
                      "ignore_above": 256
                  }
              }
          },
          "telephone": {
              "type": "text",
              "fields": {
                  "keyword": {
                      "type": "keyword",
                      "ignore_above": 256
                  }
              }
          },
          "title": {
              "type": "text",
              "analyzer": "korean",
              "fields": {
                  "keyword": {
                      "type": "keyword",
                      "ignore_above": 256
                  },
                  "spells": {
                      "type": "text",
                      "fielddata":"true",
                      "analyzer": "nfd_normalized"
                  },
                  "auto": {
                      "type": "text",
                      "fielddata":"true",
                      "analyzer": "my-index-edge-jaso",
                      "search_analyzer": "my-search-jaso"
                  }

              }
          }
          }
      }
    }
}


7.logstash 설치
wget "https://artifacts.elastic.co/downloads/logstash/logstash-6.1.3.tar.gz"
tar zxvf logstash-6.1.3.tar.gz
cd logstash-6.1.3



jdbc 다운로드
wget "http://www.queryjet.com/static/demo/mysql-connector-java-5.1.18.jar"

store.conf 작성
input {
  jdbc {
    jdbc_driver_library => "/home/ec2-user/logstash-6.1.3/mysql-connector-java-5.1.18.jar"
    jdbc_driver_class => "com.mysql.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://123.142.190.80:23306/foodblog"
    jdbc_user => "crawl_user"
    jdbc_password => "crawl_user!!"
    statement => "SELECT * FROM naveraddress WHERE not isnull(lat) LIMIT 10000"
    jdbc_paging_enabled => "true"
    jdbc_page_size => "5000"
#    schedule => "* * * * *"
  }
}

#    WHERE id > :sql_last_value
#    use_column_value => true
#    tracking_column => id

filter {
    mutate {
       split => { "category" => ">" }
       add_field => {
	"category1" => "%{[category][0]}"
 	"category2" => "%{[category][1]}"
       }
       split => { "address" => " " }
       add_field => {
	"region" => "%{[address][0]}"
       }
       remove_field => [  "@version", "@timestamp"]
       add_field => {
        "location" => ["%{lat},%{lng}"]
        }
    }
}

output {
  stdout {
        codec => rubydebug
    }
  elasticsearch {
      document_id => "%{idx}"
    hosts => ["127.0.0.1:9200"]
        index => "store"
        manage_template => false
  }
}



-logstash 실행
./bin/logstash -f store.conf



------------------------------------------------------------------------------------------------------------------------
product 색인


0. 아리랑 설치
wget https://github.com/blaze94/fastcampus_ir_common/raw/master/lecture/lecture3/arirang-analyzer-es-plugin-6.1.3.zip
bin/elasticsearch-plugin install file://`pwd`/arirang-analyzer-es-plugin-6.1.3.zip

1. 동의어 불용어 사전 폴더 만들기

mkdir config/analysis
touch config/analysis/synonym.txt
touch config/analysis/stopword.txt

1. product  템플릿
PUT _template/product
{
    "template" : "product*",
    "settings" : {
        "index":{
          "analysis":{
            "analyzer":{
              "korean":{
                "type":"custom",
                "char_filter" :  ["html_strip"],
                "tokenizer":"arirang_tokenizer",
                "filter" : ["arirang_filter","lowercase","my_synonym","my_stop"]
              }
            },
            "filter" : {
                "my_synonym" : {
                    "type" : "synonym",
                    "synonyms_path" : "analysis/synonym.txt"
                },
                "my_stop" : {
                    "type" : "stop",
                    "stopwords_path" : "analysis/stopword.txt"
                }
            }
          }
        }
      },
      "mappings": {
        "doc": {
          "_all": {
             "enabled": false
          },
          "properties": {
            "product_name": {
              "type" : "text",
              "analyzer": "korean",
              "fields": {
                    "raw": {
                        "type":  "keyword"
                    }
                }
            },
            "price" : {
              "type" : "integer"
            },
            "category": {
              "type" : "text",
              "analyzer": "korean",
              "fields": {
                  "raw": {
                    "type":  "keyword"
                  }
                }
            },
            "manufacturer" : {
                "type" : "text",
                "analyzer": "korean",
                "fields": {
                  "raw": {
                    "type":  "keyword"
                  }
                },
                "boost": 5
            },
            "image" : {
              "type" : "keyword"
            },
            "content" : {
              "type" : "text",
              "analyzer": "korean",
              "fields": {
                "raw": {
                  "type":  "keyword"
                }
              }
            },
            "reg_date" : {
              "type" : "date"
            }
          }
        }
      }
}

2. product.conf 작성

input {
  jdbc {
    jdbc_driver_library => "/home/ec2-user/logstash-6.1.3/mysql-connector-java-5.1.18.jar"
    jdbc_driver_class => "com.mysql.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://svn.queryjet.net:23306/newsdb"
    jdbc_user => "news_user"
    jdbc_password => "news_user11"
    statement => "SELECT * FROM Product"
  }
}

#    WHERE id > :sql_last_value
#    use_column_value => true
#    tracking_column => id

filter {
    mutate {
       remove_field => [  "@version", "@timestamp"]
       convert => { "price" => "integer" }
       gsub => [
    	    "content", "<.*?>", ""
       ]
    }
}


output {
  stdout {
        codec => rubydebug
    }
  elasticsearch {
    hosts => ["127.0.0.1:9200"]
        index => "product"
        manage_template => false
        document_id => "%{id}"
  }
}
